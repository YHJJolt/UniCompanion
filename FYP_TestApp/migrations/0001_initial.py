# Generated by Django 5.2.2 on 2025-06-29 08:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanionChatSession',
            fields=[
                ('session_id', models.AutoField(primary_key=True, serialize=False)),
                ('started_at', models.DateTimeField()),
                ('ended_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'companion_chat_session',
            },
        ),
        migrations.CreateModel(
            name='PostComments',
            fields=[
                ('post_comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=5000)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'post_comments',
            },
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('post_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=5000, null=True)),
                ('visibility', models.CharField(max_length=15)),
                ('post_type', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'posts',
            },
        ),
        migrations.CreateModel(
            name='PostcVotes',
            fields=[
                ('postc_vote_id', models.AutoField(primary_key=True, serialize=False)),
                ('vote_type', models.CharField(blank=True, max_length=10, null=True)),
                ('post_comment', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='FYP_TestApp.postcomments')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='FYP_TestApp.posts')),
            ],
            options={
                'db_table': 'postc_votes',
            },
        ),
        migrations.AddField(
            model_name='postcomments',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='FYP_TestApp.posts'),
        ),
        migrations.CreateModel(
            name='Flairs',
            fields=[
                ('flair_id', models.AutoField(primary_key=True, serialize=False)),
                ('flair_type', models.CharField(max_length=10)),
                ('flair_name', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField()),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='FYP_TestApp.posts')),
            ],
            options={
                'db_table': 'flairs',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=20, unique=True)),
                ('stu_email', models.CharField(max_length=45, unique=True)),
                ('password', models.CharField(max_length=128, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='UsersVotes',
            fields=[
                ('user_vote_id', models.AutoField(primary_key=True, serialize=False)),
                ('vote_type', models.CharField(blank=True, max_length=10, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'users_votes',
            },
        ),
        migrations.CreateModel(
            name='UserComments',
            fields=[
                ('user_comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=5000)),
                ('created_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_comments',
            },
        ),
        migrations.CreateModel(
            name='Saves',
            fields=[
                ('pk', models.CompositePrimaryKey('saved_at', 'post_id', 'user_id', blank=True, editable=False, primary_key=True, serialize=False)),
                ('saved_at', models.DateTimeField()),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='FYP_TestApp.posts')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'saves',
            },
        ),
        migrations.CreateModel(
            name='PostVotes',
            fields=[
                ('post_vote_id', models.AutoField(primary_key=True, serialize=False)),
                ('vote_type', models.CharField(blank=True, max_length=10, null=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='FYP_TestApp.posts')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'post_votes',
            },
        ),
        migrations.AddField(
            model_name='posts',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='postcomments',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CompanionMessage',
            fields=[
                ('message_id', models.AutoField(primary_key=True, serialize=False)),
                ('sender', models.CharField(max_length=10)),
                ('message', models.CharField(max_length=9999)),
                ('timestamp', models.DateTimeField()),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='FYP_TestApp.companionchatsession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'companion_message',
            },
        ),
        migrations.AddField(
            model_name='companionchatsession',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ChatbotCompanion',
            fields=[
                ('avatar_id', models.AutoField(primary_key=True, serialize=False)),
                ('avatar_name', models.CharField(max_length=50)),
                ('image_url', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=500)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='FYP_TestApp.companionchatsession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chatbot_companion',
            },
        ),
        migrations.CreateModel(
            name='CalendarEvent',
            fields=[
                ('event_id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=30)),
                ('title', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('color', models.CharField(max_length=30)),
                ('reminder', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'calendar_event',
            },
        ),
    ]
